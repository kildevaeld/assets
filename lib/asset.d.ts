import { IFile } from './interface';
export declare function observe(target: any, key: string, descriptor: PropertyDescriptor): void;
export interface AssetOptions {
    /**  Unique id for the asset. Should be generated by the metaStore */
    id?: string;
    /**  Arbitrary for the file. */
    name?: string;
    /** File name */
    filename?: string;
    /** path to file (without the filename and prefixed with '/') */
    path?: string;
    /** The mime file of the file */
    mime?: string;
    /** The size of the file in bytes*/
    size?: number;
    /** Creation date */
    ctime?: number;
    /** Modification date */
    mtime?: number;
    /** Meta data */
    meta?: {
        [key: string]: any;
    };
    /** Hidden */
    hidden?: boolean;
}
export declare class Asset implements IFile {
    private _attributes;
    id: string;
    name: string;
    filename: string;
    path: string;
    mime: string;
    size: number;
    ctime: number;
    mtime: number;
    hidden: boolean;
    meta: {
        [key: string]: any;
    };
    fullPath: string;
    get(key: string): any;
    setMeta(key: string, value: any): this;
    toJSON(): IFile;
    validdata(): boolean;
    constructor(file?: AssetOptions);
}
